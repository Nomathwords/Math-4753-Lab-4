yhat=with(spruce,predict(quad.lm,data.frame(BHDiameter)))
TSS=with(spruce,sum((Height-mean(Height))^2))
cat("TSS = ", TSS, "\n")
MSS=with(spruce,sum((yhat-mean(Height))^2))
cat("MSS = ", MSS, "\n")
RSS=with(spruce,sum((Height-yhat)^2))
cat("RSS = ", RSS, "\n")
MSS / TSS
cooks20x(quad.lm)
quad2.lm=lm(Height~BHDiameter + I(BHDiameter^2) , data=spruce[-24,])
cooks20x(quad2.lm)
summary(quad.lm)
summary(quad2.lm)
sp2 <- within(spruce, X<-(BHDiameter-18)*(BHDiameter>18)) # this makes a new variable and places it within the same df
sp2
lmp=lm(Height~BHDiameter + X,data=sp2)
tmp=summary(lmp)
names(tmp)
myf = function(x,coef){
coef[1]+coef[2]*(x) + coef[3]*(x-18)*(x-18>0)
}
plot(spruce,main="Piecewise regression")
myf(0, coef=tmp$coefficients[,"Estimate"])
curve(myf(x,coef=tmp$coefficients[,"Estimate"] ),add=TRUE, lwd=2,col="Blue")
abline(v=18)
text(18,16,paste("R sq.=",round(tmp$r.squared,4) ))
library(Math4753Spring2023)
install.packages("C:/Users/Hunter/Desktop/Math4753Spring2023.zip", repos = NULL, type = "win.binary")
library(Math4753Spring2023)
#library(Math4753Spring2023)
v <- c(1, 2, 3, 4, 5, 5)
Math4753Spring2023::getmode(v)
devtools::load_all(".")
devtools::load_all(".")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
getwd()
spruce = read.csv("SPRUCE.csv")
tail(spruce)
trendscatter(Height ~ BHDiameter, f = 0.5, data = spruce)
spruce.lm = with(spruce, lm(Height ~ BHDiameter))
height.res <- residuals(spruce.lm)
height.fit <- fitted(spruce.lm)
plot(height.res ~ height.fit)
trendscatter(height.res ~ height.fit, f = 0.5, main = "Plot of height.res vs height.fit")
plot(spruce.lm, which = 1)
normcheck(spruce.lm, shapiro.wilk = TRUE)
round(mean(height.res), 2)
quad.lm <- lm(formula = Height ~ BHDiameter + I(BHDiameter^2), data = spruce)
quad.lm
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce)
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "coral4", add = TRUE)
quad.fit <- fitted(quad.lm)
plot(quad.lm, which = 1)
normcheck(quad.lm, shapiro.wilk = TRUE)
summary(quad.lm)
ciReg(quad.lm)
testdata <- data.frame(BHDiameter = 15)
predict(quad.lm, newdata = testdata)
testdata <- data.frame(BHDiameter = 18)
predict(quad.lm, newdata = testdata)
testdata <- data.frame(BHDiameter = 20)
predict(quad.lm, newdata = testdata)
summary(spruce.lm)
summary(quad.lm)
anova(spruce.lm, quad.lm)
yhat=with(spruce,predict(quad.lm,data.frame(BHDiameter)))
TSS=with(spruce,sum((Height-mean(Height))^2))
cat("TSS = ", TSS, "\n")
MSS=with(spruce,sum((yhat-mean(Height))^2))
cat("MSS = ", MSS, "\n")
RSS=with(spruce,sum((Height-yhat)^2))
cat("RSS = ", RSS, "\n")
MSS / TSS
cooks20x(quad.lm)
quad2.lm=lm(Height~BHDiameter + I(BHDiameter^2) , data=spruce[-24,])
cooks20x(quad2.lm)
summary(quad.lm)
summary(quad2.lm)
sp2 <- within(spruce, X<-(BHDiameter-18)*(BHDiameter>18)) # this makes a new variable and places it within the same df
sp2
lmp=lm(Height~BHDiameter + X,data=sp2)
tmp=summary(lmp)
names(tmp)
myf = function(x,coef){
coef[1]+coef[2]*(x) + coef[3]*(x-18)*(x-18>0)
}
plot(spruce,main="Piecewise regression")
myf(0, coef=tmp$coefficients[,"Estimate"])
curve(myf(x,coef=tmp$coefficients[,"Estimate"] ),add=TRUE, lwd=2,col="Blue")
abline(v=18)
text(18,16,paste("R sq.=",round(tmp$r.squared,4) ))
library(Math4753Spring2023)
#library(Math4753Spring2023)
v <- c(1, 2, 3, 4, 5, 5)
Math4753Spring2023::
#library(Math4753Spring2023)
v <- c(1, 2, 3, 4, 5, 5)
Math4753Spring2023::getmode(v)
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
#v <- c(1, 2, 3, 4, 5, 5)
#Math4753Spring2023::getmode(v)
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
v <- c(1, 2, 3, 4, 5, 5)
Math4753Spring2023::getmode(v)
library(Math4753Spring2023)
v <- c(1, 2, 3, 4, 5, 5)
Math4753Spring2023::getmode(v)
## piecewise linear model in R
## Model y = b0 + b1x + b2(x-xk)*(x>xk)
## You will need to change the code appropriately
sp2.df=within(spruce.df, X<-(BHDiameter-20)*(BHDiameter>20)) # this makes a new variable and places it within the same df
spruce.df = read.csv("SPRUCE.csv")
#get wd
getwd()
#Top six lines
tail(spruce.df)
#Plot the points
windows()
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
library(ggplot2)
windows()
g = ggplot(spruce.df,mapping = aes(x = BHDiameter, y = Height)) +
geom_point()
print(g)
g = g+ geom_smooth(formula = y~ log(x), method = "lm", col = "steelblue")
g = g + geom_smooth(formula = y ~ x, method = "lm", col = "Black")
g = g + geom_smooth(formula = y~ x+ I(x^2), method ="lm", col = "Red")
print(g)
g = g + geom_smooth(formula = y~ poly(x,3), method ="lm", col = "green3")
g
#load s20x library and make lowess smoother
library(s20x)
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
# Now make the linear model
spruce.lm=lm(Height~BHDiameter,data=spruce.df)
summary(spruce.lm)
#residuals  created from the linear model object
height.res=residuals(spruce.lm)
#fitted values made from the linear model object
height.fit=fitted(spruce.lm)
windows()
#Make the plot using the plot function
plot(height.fit,height.res)
# Put a lowess smoother through res vs fitted
trendscatter( height.fit,height.res)
# Quick way to make a residual plot
plot(spruce.lm, which =1)
# Two plots testing normality
windows()
normcheck(spruce.lm,shapiro.wilk = TRUE)
## Quadratic object using the linear model
quad.lm=lm(Height~BHDiameter + I(BHDiameter^2),data=spruce.df)
summary(quad.lm)
add1(spruce.lm,.~.+I(BHDiameter^2))
anova(spruce.lm)
anova(quad.lm)
anova(spruce.lm,quad.lm)
cubic.lm=lm(Height~BHDiameter + I(BHDiameter^2)+I(BHDiameter^3),data=spruce.df)
anova(cubic.lm)
add1(quad.lm,.~.+I(BHDiameter^3))
#add to the scatter plot
windows()
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
coef(quad.lm)
names(quad.lm)
quad.lm$coef[2]
myplot=function(x){
0.86089580 +1.46959217*x  -0.02745726*x^2
}
#Or more general method
myplot=function(x){
quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
curve(myplot, lwd=2, col="steelblue",add=TRUE)
plot(quad.lm, which=1)
plot(spruce.lm,which=1)
normcheck(quad.lm,shapiro.wilk = TRUE)
summary(quad.lm)
predict(quad.lm, data.frame(BHDiameter=c(3,6,8)))
ciReg(quad.lm)
predict(quad.lm, data.frame(BHDiameter=c(15,18,20)))
anova(spruce.lm,quad.lm)
data = 15:24
predict20x(quad.lm,data.frame(BHDiameter = data, `I(BhDiameter)^2`=data^2))
anova(quad.lm)
anova(spruce.lm)
height.qfit=fitted(quad.lm)
RSS=with(spruce.df, sum((Height-height.qfit)^2))
RSS
MSS = with(spruce.df, sum((height.qfit-mean(Height))^2))
MSS
TSS = with(spruce.df, sum((Height-mean(Height))^2))
TSS
MSS/TSS
cooks20x(quad.lm)
quad2.lm=lm(Height~BHDiameter + I(BHDiameter^2) , data=spruce.df[-24,])
summary(quad2.lm)
summary(quad.lm)
#some other code you might need
#The following code plots residuals
windows()
#Plot the data
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
#Make a quadratic model
quad.lm=lm(Height~BHDiameter + I(BHDiameter^2),data=spruce.df)
# Find the coefficients
coef(quad.lm)
#Make a function that produces heights for inputs "x"
myplot=function(x){
0.86089580 +1.46959217*x  -0.02745726*x^2
}
# add the quadratic to the points
curve(myplot, lwd=2, col="steelblue",add=TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce.df[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce.df[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce.df, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce.df,text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce.df, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
getwd()
spruce = read.csv("SPRUCE.csv")
tail(spruce)
trendscatter(Height ~ BHDiameter, f = 0.5, data = spruce)
spruce.lm = with(spruce, lm(Height ~ BHDiameter))
height.res <- residuals(spruce.lm)
height.fit <- fitted(spruce.lm)
plot(height.res ~ height.fit)
trendscatter(height.res ~ height.fit, f = 0.5, main = "Plot of height.res vs height.fit")
plot(spruce.lm, which = 1)
normcheck(spruce.lm, shapiro.wilk = TRUE)
round(mean(height.res), 2)
quad.lm <- lm(formula = Height ~ BHDiameter + I(BHDiameter^2), data = spruce)
quad.lm
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce)
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "coral4", add = TRUE)
quad.fit <- fitted(quad.lm)
plot(quad.lm, which = 1)
normcheck(quad.lm, shapiro.wilk = TRUE)
summary(quad.lm)
ciReg(quad.lm)
testdata <- data.frame(BHDiameter = 15)
predict(quad.lm, newdata = testdata)
testdata <- data.frame(BHDiameter = 18)
predict(quad.lm, newdata = testdata)
testdata <- data.frame(BHDiameter = 20)
predict(quad.lm, newdata = testdata)
summary(spruce.lm)
summary(quad.lm)
anova(spruce.lm, quad.lm)
yhat=with(spruce,predict(quad.lm,data.frame(BHDiameter)))
TSS=with(spruce,sum((Height-mean(Height))^2))
cat("TSS = ", TSS, "\n")
MSS=with(spruce,sum((yhat-mean(Height))^2))
cat("MSS = ", MSS, "\n")
RSS=with(spruce,sum((Height-yhat)^2))
cat("RSS = ", RSS, "\n")
MSS / TSS
cooks20x(quad.lm)
quad2.lm=lm(Height~BHDiameter + I(BHDiameter^2) , data=spruce[-24,])
cooks20x(quad2.lm)
summary(quad.lm)
summary(quad2.lm)
sp2 <- within(spruce, X<-(BHDiameter-18)*(BHDiameter>18)) # this makes a new variable and places it within the same df
sp2
lmp=lm(Height~BHDiameter + X,data=sp2)
tmp=summary(lmp)
names(tmp)
myf = function(x,coef){
coef[1]+coef[2]*(x) + coef[3]*(x-18)*(x-18>0)
}
plot(spruce,main="Piecewise regression")
myf(0, coef=tmp$coefficients[,"Estimate"])
curve(myf(x,coef=tmp$coefficients[,"Estimate"] ),add=TRUE, lwd=2,col="Blue")
abline(v=18)
text(18,16,paste("R sq.=",round(tmp$r.squared,4) ))
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
library(Math4753Spring2023)
v <- c(1, 2, 3, 4, 5, 5)
Math4753Spring2023::getmode(v)
# add the quadratic to the points
curve(myplot, lwd=2, col="steelblue",add=TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce.df[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce.df[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce.df, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce.df,text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce.df, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
curve(myplot, lwd=2, col="steelblue",add=TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce,text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce)
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
# add the quadratic to the points
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce,text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
# add the quadratic to the points
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce,text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce)
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce.df[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce.df[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce.df, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce.df,text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce.df, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce)
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, col = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, col = "Blue", pch = TRUE)
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, col = "Blue", pch)
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, col = "Blue", pch = "Purple")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, bg = Blue)
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, use pch = 21, bg = "Blue")
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = 21, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = 21, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = 21, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = 21, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.fit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.fit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = 21, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.qfit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
# add the quadratic to the points
coef(quad.lm)
plot(Height ~ BHDiameter, data = spruce, pch = 21, bg = "Blue")
quadCurve = function(x) {
quad.lm$coef[1] + quad.lm$coef[2] * x + quad.lm$coef[3] * x^2
}
curve(quadCurve, lwd = 2, col = "steelblue", add = TRUE)
#Place segments (residuals) on the plot (except for the 3 largest cooks distances. 18, 21, 24)
with(spruce[-c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.fit[-c(18,21,24)]) )
with(spruce[c(18,21,24),],segments(BHDiameter, Height, BHDiameter, height.fit[c(18,21,24)], col="Red", lwd=3) )
with( spruce, arrows(5,Height[24], BHDiameter[24], Height[24],lwd=2,col="Blue"))
with(spruce, text(2,Height[24], paste("Highest Cook's","\n", "distance",sep=" ")))
with(spruce, text(BHDiameter,Height, 1:36,cex=0.5,pos=4))
#########################################################################
